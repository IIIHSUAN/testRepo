var rate_flags = {
    'AUD': 'au', 'CAD': 'ca', 'CHF': 'ch', 'CNY': 'cn', 'CN': 'cn', 'EUR': 'eu', 'GBP': 'gb', 'HKD': 'hk', 'IDR': 'id',
    'JPY': 'jp', 'KRW': 'kr', 'MYR': 'my', 'MOP': 'mo', 'NZD': 'nz', 'SEK': 'se', 'SGD': 'sg', 'THB': 'th',
    'USD': 'us', 'US': 'us', 'VND': 'vn', 'ZAR': 'za', 'PHP': 'ph', 'SAR': 'sa', 'BEF': 'be', 'FRF': 'fr', 'ITL': 'it',
    'DEM': 'de', 'TWD': 'tw', 'ESP': 'es', 'DKK': 'dk', 'INR': 'in', 'NOK': 'no', 'NLG': 'nl', 'FIM': 'fi',
    'ATS': 'at', 'IEP': 'ie', 'MXN': 'mx', 'PLN': 'pl', 'CZK': 'cz', 'TRY': 'tr', 'HUF': 'hu'
};

function _uuid() {
    var d = Date.now();
    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
        d += performance.now();
    }
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}

function rate_DateTimeFormat(dateString) {
    if (!dateString) { return dateString; }

    var s = tryParseDateFromString(dateString, 'ymd');
    //return (s.getFullYear() + '/' + (s.getMonth() + 1) + '/' + s.getDate() + ' ' + s.getHours() + ':' + s.getMinutes());
    return s.format("yyyy/MM/dd hh:mm");
}

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () { })); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function tryParseDateFromString(dateStringCandidateValue) {
    var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "ymd";

    if (!dateStringCandidateValue) {
        return dateStringCandidateValue;
    }

    var mapFormat = format.split("").reduce(function (a, b, i) {
        a[b] = i;
        return a;
    }, {});
    var dateStr2Array = dateStringCandidateValue.split(/[ :\-\/]/g);
    var datePart = dateStr2Array.slice(0, 3);
    var datePartFormatted = [+datePart[mapFormat.y], +datePart[mapFormat.m] - 1, +datePart[mapFormat.d]];

    if (dateStr2Array.length > 3) {
        dateStr2Array.slice(3).forEach(function (t) {
            return datePartFormatted.push(+t);
        });
    } // test date validity according to given [format] ES6


    var dateTrial = _construct(Date, datePartFormatted);

    return dateTrial && dateTrial.getFullYear() === datePartFormatted[0] && dateTrial.getMonth() === datePartFormatted[1] && dateTrial.getDate() === datePartFormatted[2] ? dateTrial : dateStringCandidateValue;
}

function checkform_calender_nofutue_fix(input) {
    //var d_today = new Date();
    //修正new Date()取得的當日時間會包含client端電腦時間(hh:mm:ss)，但calander取得的時間會是08:00:00
    //當使用者在早上八點前查詢時都認為是未來時間
    var d_today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 8, 0, 0);
    var d_check = new Date($(input).val());
    //console.log('>>>>1', d_today, d_check , d_today>d_check)
    if (d_today < d_check) {
        $(input).on('mousedown click focus change', removeerror);
        $(input).closest('.row').find('.error').text('日期不可大於今日');
        return false;
    }
    else
        return true;
}

function checkform_calender_nofutue_new(input) {
    //判斷使用者當下的日期
    var d_today = new Date().format('yyyy/MM/dd');
    var d_check = new Date($(input).val()).format('yyyy/MM/dd');

    if (d_today < d_check) {
        $(input).on('mousedown click focus change', removeerror);
        $(input).closest('.row').find('.error').text('日期不可大於今日');
        return false;
    }
    else
        return true;
}

Date.prototype.format = function (fmt) {
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小時
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}

function downloadURI(uri, name) {
    var link = document.createElement("a");
    link.download = name;
    link.href = uri;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    delete link;
}